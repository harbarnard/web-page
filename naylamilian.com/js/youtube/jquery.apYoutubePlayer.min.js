/* NO EDIT */

(function (d) {
	function e(a) {
		function c() {
			b.quality && "undefined" !== typeof b._player.setPlaybackQuality && b._player.setPlaybackQuality(b.quality);
			b.playerReady = !0;
			d(b).trigger("ap_YoutubePlayer.YT_READY");
			"undefined" !== typeof b._player.setVolume && b._player.setVolume(100 * b._defaultVolume);
			b._autoPlay && b._player.playVideo()
		}
		function e() {}
		
		function f(a) {
			if (b.forceMainStop && (b.forceMainStop = !1, "undefined" !== typeof b._player.stopVideo)) {
				b._player.stopVideo();
				d(b).trigger("ap_YoutubePlayer.FORCE_MAIN_STOP");
				return
			}
			0 == a.data && d(b).trigger("ap_YoutubePlayer.END_PLAY");
			1 == a.data && (b.small_embed && "undefined" !== typeof b._player.setVolume && b._player.setVolume(100 * b._defaultVolume), b.forcePreviewStop && "undefined" !== typeof b._player.stopVideo && b._player.stopVideo(), b._inited || (d(b).trigger("ap_YoutubePlayer.START_PLAY"), b._inited = !0), b._initialAutoplaySet || (b.isMobile && b.initialAutoplay && (b._autoPlay = !0), b._initialAutoplaySet = !0), d(b).trigger("ap_YoutubePlayer.STATE_PLAYING"));
			2 == a.data && d(b).trigger("ap_YoutubePlayer.STATE_PAUSED")
		}
		function g() {}
		
		var b = this;
		this.isMobile = a.isMobile;
		this.initialAutoplay = a.initialAutoplay;
		this._inited = this._initialAutoplaySet = !1;
		this._player;
		this._autoPlay = a.autoPlay;
		this._defaultVolume = a.defaultVolume;
		this._youtubeHolder = a.youtubeHolder;
		this._frameId = "ytplayer" + Math.floor(16777215 * Math.random());
		a.quality && (this.quality = a.quality);
		a.small_embed && (this.small_embed = a.small_embed);
		this.lastID;
		this.playerReadyInterval = 100;
		this.playerReadyIntervalID;
		this.playerReady = !1;
		var j = a.youtubeChromeless,
		k = "&amp;rel=0";
		this.forcePreviewStop = this.forceMainStop = !1;
		a = j ? this.small_embed ? a.isIE ? "http://www.youtube.com/embed/" + a.mediaPath + "?controls=0&amp;showinfo=0&amp;enablejsapi=1" : "http://www.youtube.com/embed/" + a.mediaPath + "?controls=0&amp;showinfo=0&amp;enablejsapi=1&amp;wmode=transparent" : "http://www.youtube.com/embed/" + a.mediaPath + "?controls=0&amp;showinfo=0" + k + "&amp;enablejsapi=1&amp;theme=dark&amp;wmode=transparent" : "http://www.youtube.com/embed/" + a.mediaPath + "?rel=0&amp;enablejsapi=1&amp;theme=dark&amp;wmode=transparent";
		a = d("<iframe />", {
				frameborder : 0,
				src : a,
				width : "100%",
				height : "100%",
				id : this._frameId
			});
		this._youtubeHolder.css("display", "block").append(a);
		if (h)
			b._player = new YT.Player(b._frameId, {
					events : {
						onReady : c,
						onPlaybackQualityChange : e,
						onStateChange : f,
						onError : g
					}
				});
		else
			var i = setInterval(function () {
					window.YT && (i && clearInterval(i), h = !0, b._player = new YT.Player(b._frameId, {
								events : {
									onReady : c,
									onPlaybackQualityChange : e,
									onStateChange : f,
									onError : g
								}
							}))
				}, 100);
		window.onYouTubeIframeAPIReady = function () {}
		
	}
	var h = !1;
	d.youtubePlayer = function (a) {
		return new e(a)
	};
	e.prototype = {
		stopPreview : function () {
			this.forcePreviewStop = !0
		},
		initVideo : function (a) {
			this.forceMainStop = !1;
			if (this.playerReady)
				this._player && (this._inited = this.forcePreviewStop = !1, this._autoPlay ? "undefined" !== typeof this._player.loadVideoById && this._player.loadVideoById(a) : "undefined" !== typeof this._player.cueVideoById && this._player.cueVideoById(a));
			else {
				var c = this;
				this.lastID = a;
				this.playerReadyIntervalID || (this.playerReadyIntervalID = setInterval(function () {
							c.playerReady && (c.playerReadyIntervalID && clearInterval(c.playerReadyIntervalID), c.forceMainStop || c.initVideo(c.lastID))
						}, this.playerReadyInterval))
			}
		},
		stop : function () {
			this.forceMainStop = !0;
			this._player && "undefined" !== typeof this._player.stopVideo && this._player.stopVideo()
		},
		play : function () {
			this._player && "undefined" !== typeof this._player.playVideo && this._player.playVideo()
		},
		pause : function () {
			this._player && "undefined" !== typeof this._player.pauseVideo && this._player.pauseVideo()
		},
		togglePlayback : function (a) {
			if (this._player)
				if (void 0 == a) {
					if ("undefined" === typeof this._player.getPlayerState)
						return !1;
					a = this._player.getPlayerState();
					1 == a ? "undefined" !== typeof this._player.pauseVideo && this._player.pauseVideo() : 2 == a ? "undefined" !== typeof this._player.playVideo && this._player.playVideo() : (-1 == a || 5 == a || 0 == a) && "undefined" !== typeof this._player.playVideo && this._player.playVideo()
				} else
					a ? "undefined" !== typeof this._player.playVideo && this._player.playVideo() : "undefined" !== typeof this._player.pauseVideo && this._player.pauseVideo()
		},
		seek : function (a) {
			this._player && "undefined" !== typeof this._player.seekTo && this._player.seekTo(a)
		},
		isMuted : function () {
			if (this._player && "undefined" !== typeof this._player.isMuted)
				return this._player.isMuted()
		},
		getDuration : function () {
			if (this._player && "undefined" !== typeof this._player.getDuration)
				return this._player.getDuration()
		},
		getCurrentTime : function () {
			if (this._player && "undefined" !== typeof this._player.getCurrentTime)
				return this._player.getCurrentTime()
		},
		getVideoBytesLoaded : function () {
			if (this._player && "undefined" !== typeof this._player.getVideoBytesLoaded)
				return this._player.getVideoBytesLoaded()
		},
		getVideoBytesTotal : function () {
			if (this._player && "undefined" !== typeof this._player.getVideoBytesTotal)
				return this._player.getVideoBytesTotal()
		},
		setVolume : function (a) {
			0 > a ? vol = 0 : 1 < a && (a = 1);
			this._player && "undefined" !== typeof this._player.setVolume && this._player.setVolume(100 * a)
		},
		getPlayerState : function () {
			if (this._player && "undefined" !== typeof this._player.getPlayerState)
				return this._player.getPlayerState()
		}
	}
})(jQuery);
